# نام این گردش کار (Workflow) که در تب Actions گیت‌هاب نمایش داده می‌شود
name: Build Flutter APK

# تعریف رویدادهایی که این گردش کار را فعال می‌کنند
on:
  # هر بار که کدی به شاخه main پوش شود، این گردش کار اجرا می‌شود
  push:
    branches: [ "main" ]
  # همچنین به صورت دستی هم می‌توان آن را اجرا کرد (از طریق تب Actions)
  workflow_dispatch:

# تعریف کارهایی که باید انجام شوند
jobs:
  # تنها کار ما در اینجا، بیلد کردن اپلیکیشن است
  build:
    # این کار روی یک ماشین مجازی با آخرین نسخه اوبونتو اجرا می‌شود
    runs-on: ubuntu-latest

    # مراحل انجام کار به ترتیب
    steps:
      # مرحله ۱: دانلود کردن سورس کد پروژه شما از ریپازیتوری
      - name: Checkout code
        uses: actions/checkout@v3

      # مرحله ۲: نصب Java Development Kit (JDK) که برای بیلد اندروید ضروری است
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # یک توزیع معتبر از جاوا
          java-version: '12.x'
          cache: 'gradle'

      # مرحله ۳: نصب Flutter SDK در ماشین مجازی
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # استفاده از آخرین نسخه پایدار فلاتر

      # مرحله ۴: دانلود تمام پکیج‌های تعریف شده در pubspec.yaml
      - name: Get Flutter dependencies
        run: flutter pub get

      # مرحله ۵: ساخت فایل‌های APK به صورت جدا برای هر معماری پردازنده
      # این بهترین روش برای انتشار در گوگل پلی است چون حجم هر APK کمتر می‌شود
      - name: Build release APK
        run: flutter build apk --release --split-per-abi

      # مرحله ۶: آپلود کردن فایل‌های APK ساخته شده به عنوان یک "آرتیفکت"
      # این کار باعث می‌شود فایل‌های APK برای دانلود در دسترس قرار بگیرند
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          # نام پکیج دانلودی شما
          name: release-apks
          # مسیری که فایل‌های APK در آن ساخته شده‌اند
          path: build/app/outputs/flutter-apk/*.apk
